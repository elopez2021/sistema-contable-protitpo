/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.BalanzaController;
import controller.BalanzaController.Pair;
import controller.Cabecera;
import controller.CatalogoController;
import controller.DocumentosController;
import controller.ProcesoCierreDiarioController;
import controller.TransaccionController;
import java.awt.Color;
import java.text.ParseException;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import model.CabeceraTransaccion;
import model.CatalogoCuenta;
import model.Documentos;
import model.TransaccionContable;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;

/**
 *
 * @author Zoila López
 */
public class consultas extends javax.swing.JPanel {

    /**
     * Creates new form consultas
     */
    DocumentosController documentoCtrl = new DocumentosController();
    Cabecera cabeceraCtrl = new Cabecera();
    TransaccionController transaccionCtrl = new TransaccionController();
    CatalogoController catalogoCtrl = new CatalogoController();
    ProcesoCierreDiarioController procesocierreCtrl = new ProcesoCierreDiarioController();

    List<String> descripcionesTiposDocumentos = documentoCtrl.obtenerDescripcionesTiposDocumentos();

    public consultas() {
        initComponents();
        tb_load_catalogo();

        for (String descripcion : descripcionesTiposDocumentos) {
            cmb_descrip_doc.addItem(descripcion);
        }

    }

    public void tb_load_catalogo() {
        List<String[]> listaCatalogo = catalogoCtrl.list();

        DefaultTableModel dt = (DefaultTableModel) catalogo_table.getModel();
        dt.setRowCount(0);

        for (String[] catalogo : listaCatalogo) {
            if (catalogo[2].equals("true")) {
                catalogo[2] = "General";
            } else {
                catalogo[2] = "Detalle";
            }
            if (catalogo[5].equals("1")) {
                catalogo[5] = "Débito";
            } else {
                catalogo[5] = "Crédito";
            }
            dt.addRow(catalogo);
        }
    }

    public void limpiarCampos(JTextField[] campos) {

        for (JTextField campo : campos) {
            campo.setText("");
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnTipoCuentaGroup = new javax.swing.ButtonGroup();
        jLabel6 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        txtNroCuenta = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtDescripcionCuenta = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        rdbGeneral = new javax.swing.JRadioButton();
        rdbDetalle = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        txtCuentaPadre = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        cmbGrupoCuenta = new javax.swing.JComboBox<>();
        btnBuscarCatalogo = new javax.swing.JButton();
        btnLimpiarCatalogo = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txtNivelCuenta = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        catalogo_table = new javax.swing.JTable();
        jPanel13 = new javax.swing.JPanel();
        jPanel36 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        fecha_consulta = new com.toedter.calendar.JDateChooser();
        btn_consulta_fecha = new javax.swing.JButton();
        btnLimpiarTransFecha = new javax.swing.JButton();
        jPanel37 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        table_fecha_consulta = new javax.swing.JTable();
        jPanel12 = new javax.swing.JPanel();
        jPanel38 = new javax.swing.JPanel();
        fecha_inicial_trans = new com.toedter.calendar.JDateChooser();
        fecha_final_trans = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        btn_consultar_rango_fechas = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanel39 = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        table_rango_fechas = new javax.swing.JTable();
        jPanel14 = new javax.swing.JPanel();
        jPanel40 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        clean_process = new javax.swing.JButton();
        btn_consulta_doc = new javax.swing.JButton();
        cmb_descrip_doc = new javax.swing.JComboBox<>();
        jPanel41 = new javax.swing.JPanel();
        Jscrollpane_trans = new javax.swing.JScrollPane();
        tabla_trans_docs = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        Limpiar_tipo = new javax.swing.JButton();
        consultar_tipo_doc = new javax.swing.JButton();
        txt_documento = new javax.swing.JTextField();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_transaccion_documento = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jPanel24 = new javax.swing.JPanel();
        jPanel26 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla_balanza_general = new javax.swing.JTable();
        btnBalanza = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jPanel30 = new javax.swing.JPanel();
        jPanel32 = new javax.swing.JPanel();
        btnResumenGastosGenerales = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tabla_gastos_generales = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        jPanel33 = new javax.swing.JPanel();
        jPanel35 = new javax.swing.JPanel();
        btnEstadoFinanciero = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        tabla_estado_financiero = new javax.swing.JTable();
        mensajeLabel = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jPanel27 = new javax.swing.JPanel();
        jPanel29 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabla_balanza_comprobacion = new javax.swing.JTable();
        btnBalanzaComprobacion = new javax.swing.JButton();

        jLabel6.setText("jLabel6");

        setBackground(new java.awt.Color(255, 255, 255));
        setEnabled(false);
        setPreferredSize(new java.awt.Dimension(4, 4));

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 255));
        jTabbedPane1.setFont(new java.awt.Font("Sylfaen", 0, 14)); // NOI18N

        jPanel2.setPreferredSize(new java.awt.Dimension(4, 4));

        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        txtNroCuenta.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNroCuentaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNroCuentaFocusLost(evt);
            }
        });
        txtNroCuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNroCuentaActionPerformed(evt);
            }
        });
        txtNroCuenta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNroCuentaKeyPressed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Sylfaen", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Número de cuenta:");

        jLabel3.setFont(new java.awt.Font("Sylfaen", 1, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Descripción:");

        txtDescripcionCuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDescripcionCuentaActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Sylfaen", 1, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Tipo de cuenta:");

        btnTipoCuentaGroup.add(rdbGeneral);
        rdbGeneral.setFont(new java.awt.Font("Sylfaen", 0, 18)); // NOI18N
        rdbGeneral.setText("General");

        btnTipoCuentaGroup.add(rdbDetalle);
        rdbDetalle.setFont(new java.awt.Font("Sylfaen", 0, 18)); // NOI18N
        rdbDetalle.setText("Detalle");

        jLabel5.setFont(new java.awt.Font("Sylfaen", 1, 18)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Cuenta Padre:");

        txtCuentaPadre.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCuentaPadreFocusLost(evt);
            }
        });
        txtCuentaPadre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCuentaPadreActionPerformed(evt);
            }
        });
        txtCuentaPadre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCuentaPadreKeyPressed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Sylfaen", 1, 18)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel14.setText("Grupo de Cuenta:");

        cmbGrupoCuenta.setFont(new java.awt.Font("Sylfaen", 0, 14)); // NOI18N
        cmbGrupoCuenta.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "---Seleccione una opción---", "Débito", "Crédito" }));
        cmbGrupoCuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbGrupoCuentaActionPerformed(evt);
            }
        });

        btnBuscarCatalogo.setBackground(new java.awt.Color(153, 153, 255));
        btnBuscarCatalogo.setFont(new java.awt.Font("Sylfaen", 1, 18)); // NOI18N
        btnBuscarCatalogo.setText("Buscar");
        btnBuscarCatalogo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarCatalogoActionPerformed(evt);
            }
        });

        btnLimpiarCatalogo.setBackground(new java.awt.Color(0, 204, 204));
        btnLimpiarCatalogo.setFont(new java.awt.Font("Sylfaen", 1, 18)); // NOI18N
        btnLimpiarCatalogo.setText("Limpiar");
        btnLimpiarCatalogo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarCatalogoActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Sylfaen", 1, 18)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Nivel Cuenta:");

        txtNivelCuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNivelCuentaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtCuentaPadre))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(txtNroCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtDescripcionCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(cmbGrupoCuenta, 0, 220, Short.MAX_VALUE)
                                                .addComponent(txtNivelCuenta)
                                                .addGroup(jPanel5Layout.createSequentialGroup()
                                                    .addComponent(rdbGeneral, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(28, 28, 28)
                                                    .addComponent(rdbDetalle, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
                                                    .addGap(8, 8, 8)))))))))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(105, 105, 105)
                        .addComponent(btnBuscarCatalogo, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnLimpiarCatalogo, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(66, Short.MAX_VALUE))
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnBuscarCatalogo, btnLimpiarCatalogo});

        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNroCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(23, 23, 23)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDescripcionCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdbGeneral)
                    .addComponent(rdbDetalle)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCuentaPadre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(26, 26, 26)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbGrupoCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addGap(31, 31, 31)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNivelCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(33, 33, 33)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBuscarCatalogo, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLimpiarCatalogo, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(59, Short.MAX_VALUE))
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cmbGrupoCuenta, jLabel14, jLabel2, jLabel3, jLabel4, jLabel5, jLabel7, rdbDetalle, rdbGeneral, txtCuentaPadre, txtDescripcionCuenta, txtNivelCuenta, txtNroCuenta});

        jPanel5Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnBuscarCatalogo, btnLimpiarCatalogo});

        jScrollPane5.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane5.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        catalogo_table.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        catalogo_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nro", "Descripcion", "Tipo", "Nivel", "Cuenta Padre", "Grupo", "Fecha Creacion", "Hora Creacion", "Debito Acumulado", "Credito Acumulado", "Balance"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(catalogo_table);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 609, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane5))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Catalogo de Cuentas", jPanel2);

        jPanel36.setBackground(new java.awt.Color(255, 255, 255));
        jPanel36.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Sylfaen", 0, 18)); // NOI18N
        jLabel1.setText("Fecha de transaccion:");

        btn_consulta_fecha.setBackground(new java.awt.Color(204, 153, 255));
        btn_consulta_fecha.setFont(new java.awt.Font("Sylfaen", 0, 18)); // NOI18N
        btn_consulta_fecha.setText("Consultar");
        btn_consulta_fecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_consulta_fechaActionPerformed(evt);
            }
        });

        btnLimpiarTransFecha.setBackground(new java.awt.Color(255, 204, 204));
        btnLimpiarTransFecha.setFont(new java.awt.Font("Sylfaen", 0, 18)); // NOI18N
        btnLimpiarTransFecha.setText("Limpiar");
        btnLimpiarTransFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarTransFechaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel36Layout = new javax.swing.GroupLayout(jPanel36);
        jPanel36.setLayout(jPanel36Layout);
        jPanel36Layout.setHorizontalGroup(
            jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel36Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(fecha_consulta, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59)
                .addComponent(btnLimpiarTransFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70)
                .addComponent(btn_consulta_fecha, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel36Layout.setVerticalGroup(
            jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel36Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(fecha_consulta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel36Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_consulta_fecha)
                    .addComponent(btnLimpiarTransFecha))
                .addContainerGap())
        );

        jPanel37.setBackground(new java.awt.Color(255, 255, 255));
        jPanel37.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jScrollPane6.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane6.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        table_fecha_consulta.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        table_fecha_consulta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nro", "Fecha", "Hora", "Tipo", "Descripcion", "Hecho Por", "Monto", "Fecha Actualizacion", "Secuencia Doc", "Cuenta", "Valor Debito", "Valor Credito", "Comentario"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(table_fecha_consulta);

        javax.swing.GroupLayout jPanel37Layout = new javax.swing.GroupLayout(jPanel37);
        jPanel37.setLayout(jPanel37Layout);
        jPanel37Layout.setHorizontalGroup(
            jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel37Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 1086, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel37Layout.setVerticalGroup(
            jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel37Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel37, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel36, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addComponent(jPanel36, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel37, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Transacciones por fecha", jPanel13);

        jPanel38.setBackground(new java.awt.Color(255, 255, 255));
        jPanel38.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        fecha_inicial_trans.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                fecha_inicial_transKeyReleased(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Sylfaen", 0, 18)); // NOI18N
        jLabel8.setText("Fecha inicial");

        jLabel9.setFont(new java.awt.Font("Sylfaen", 0, 18)); // NOI18N
        jLabel9.setText("Fecha final");

        btn_consultar_rango_fechas.setBackground(new java.awt.Color(204, 153, 255));
        btn_consultar_rango_fechas.setFont(new java.awt.Font("Sylfaen", 0, 18)); // NOI18N
        btn_consultar_rango_fechas.setText("Consultar");
        btn_consultar_rango_fechas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_consultar_rango_fechasActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(255, 204, 204));
        jButton4.setFont(new java.awt.Font("Sylfaen", 0, 18)); // NOI18N
        jButton4.setText("Limpiar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel38Layout = new javax.swing.GroupLayout(jPanel38);
        jPanel38.setLayout(jPanel38Layout);
        jPanel38Layout.setHorizontalGroup(
            jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel38Layout.createSequentialGroup()
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(fecha_inicial_trans, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(fecha_final_trans, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(79, 79, 79)
                .addComponent(btn_consultar_rango_fechas, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(102, 102, 102))
        );
        jPanel38Layout.setVerticalGroup(
            jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel38Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(fecha_inicial_trans, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8)
                        .addComponent(fecha_final_trans, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9))
                    .addGroup(jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btn_consultar_rango_fechas, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPanel39.setBackground(new java.awt.Color(255, 255, 255));
        jPanel39.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jScrollPane11.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane11.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        table_rango_fechas.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        table_rango_fechas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nro", "Fecha", "Hora", "Tipo", "Descripcion", "Hecho Por", "Monto", "Fecha Actualizaccion", "Secuencia Doc", "Cuenta", "Valor Debito", "Valor Credito", "Comentario"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane11.setViewportView(table_rango_fechas);

        javax.swing.GroupLayout jPanel39Layout = new javax.swing.GroupLayout(jPanel39);
        jPanel39.setLayout(jPanel39Layout);
        jPanel39Layout.setHorizontalGroup(
            jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel39Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 1104, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel39Layout.setVerticalGroup(
            jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 455, Short.MAX_VALUE)
            .addGroup(jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel39Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 433, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(jPanel38, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel39, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel38, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel39, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Transcciones por rango de fecha", jPanel12);

        jPanel40.setBackground(new java.awt.Color(255, 255, 255));
        jPanel40.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel10.setFont(new java.awt.Font("Sylfaen", 0, 18)); // NOI18N
        jLabel10.setText("Tipo de Documento:");

        clean_process.setBackground(new java.awt.Color(204, 153, 255));
        clean_process.setFont(new java.awt.Font("Sylfaen", 0, 18)); // NOI18N
        clean_process.setText("Limpiar");
        clean_process.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clean_processActionPerformed(evt);
            }
        });

        btn_consulta_doc.setBackground(new java.awt.Color(255, 204, 204));
        btn_consulta_doc.setFont(new java.awt.Font("Sylfaen", 0, 18)); // NOI18N
        btn_consulta_doc.setText("Consultar");
        btn_consulta_doc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_consulta_docActionPerformed(evt);
            }
        });

        cmb_descrip_doc.setFont(new java.awt.Font("Sylfaen", 0, 14)); // NOI18N
        cmb_descrip_doc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Seleccione una opción-" }));

        javax.swing.GroupLayout jPanel40Layout = new javax.swing.GroupLayout(jPanel40);
        jPanel40.setLayout(jPanel40Layout);
        jPanel40Layout.setHorizontalGroup(
            jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel40Layout.createSequentialGroup()
                .addGap(115, 115, 115)
                .addComponent(jLabel10)
                .addGap(18, 18, 18)
                .addComponent(cmb_descrip_doc, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(93, 93, 93)
                .addComponent(clean_process, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_consulta_doc, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel40Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btn_consulta_doc, clean_process});

        jPanel40Layout.setVerticalGroup(
            jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel40Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(clean_process)
                    .addComponent(btn_consulta_doc)
                    .addComponent(cmb_descrip_doc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel40Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btn_consulta_doc, clean_process});

        jPanel41.setBackground(new java.awt.Color(255, 255, 255));
        jPanel41.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        Jscrollpane_trans.setBackground(new java.awt.Color(255, 255, 255));
        Jscrollpane_trans.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        tabla_trans_docs.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tabla_trans_docs.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nro", "Fecha", "Hora", "Tipo", "Descripcion", "Hecho Por", "Monto", "Fecha Actualizacion", "Secuencia Doc", "Cuenta", "Debito", "Credito", "Comentario"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Jscrollpane_trans.setViewportView(tabla_trans_docs);

        javax.swing.GroupLayout jPanel41Layout = new javax.swing.GroupLayout(jPanel41);
        jPanel41.setLayout(jPanel41Layout);
        jPanel41Layout.setHorizontalGroup(
            jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel41Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Jscrollpane_trans, javax.swing.GroupLayout.DEFAULT_SIZE, 1096, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel41Layout.setVerticalGroup(
            jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel41Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Jscrollpane_trans, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel40, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel41, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel40, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel41, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Transacciones por tipo doc.", jPanel14);

        jPanel1.setPreferredSize(new java.awt.Dimension(4, 4));

        jPanel9.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));
        jPanel10.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel11.setFont(new java.awt.Font("Sylfaen", 0, 18)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Documento:");

        Limpiar_tipo.setBackground(new java.awt.Color(204, 153, 255));
        Limpiar_tipo.setFont(new java.awt.Font("Sylfaen", 0, 18)); // NOI18N
        Limpiar_tipo.setText("Limpiar");
        Limpiar_tipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Limpiar_tipoActionPerformed(evt);
            }
        });

        consultar_tipo_doc.setBackground(new java.awt.Color(255, 204, 204));
        consultar_tipo_doc.setFont(new java.awt.Font("Sylfaen", 0, 18)); // NOI18N
        consultar_tipo_doc.setText("Consultar");
        consultar_tipo_doc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultar_tipo_docActionPerformed(evt);
            }
        });

        txt_documento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_documentoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_documentoFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_documento, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(64, 64, 64)
                .addComponent(Limpiar_tipo, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(consultar_tipo_doc, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(329, Short.MAX_VALUE))
        );

        jPanel10Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {Limpiar_tipo, consultar_tipo_doc});

        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Limpiar_tipo)
                        .addComponent(consultar_tipo_doc))
                    .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel11)
                        .addComponent(txt_documento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jPanel10Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {Limpiar_tipo, consultar_tipo_doc});

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));
        jPanel11.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        tabla_transaccion_documento.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tabla_transaccion_documento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nro", "Fecha", "Hora", "Tipo", "Descripcion", "Hecho Por", "Fecha Actualizacion", "Secuencia", "Cuenta", "Debito", "Credito"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true, false, true, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabla_transaccion_documento);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 416, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Transacciones por doc.", jPanel1);

        jPanel24.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel26.setBackground(new java.awt.Color(255, 255, 255));
        jPanel26.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        tabla_balanza_general.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cuenta", "Descripcion Cuenta", "Tipo Cuenta", "Saldo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tabla_balanza_general);

        btnBalanza.setFont(new java.awt.Font("Sylfaen", 1, 18)); // NOI18N
        btnBalanza.setText("Generar");
        btnBalanza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBalanzaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel26Layout = new javax.swing.GroupLayout(jPanel26);
        jPanel26.setLayout(jPanel26Layout);
        jPanel26Layout.setHorizontalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel26Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addGap(390, 390, 390)
                .addComponent(btnBalanza, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(429, Short.MAX_VALUE))
        );
        jPanel26Layout.setVerticalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel26Layout.createSequentialGroup()
                .addComponent(btnBalanza, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel24Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel26, javax.swing.GroupLayout.PREFERRED_SIZE, 505, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Balanza General", jPanel3);

        jPanel30.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel32.setBackground(new java.awt.Color(255, 255, 255));
        jPanel32.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnResumenGastosGenerales.setFont(new java.awt.Font("Sylfaen", 1, 18)); // NOI18N
        btnResumenGastosGenerales.setText("Generar");
        btnResumenGastosGenerales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResumenGastosGeneralesActionPerformed(evt);
            }
        });

        tabla_gastos_generales.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cuenta", "Descripcion", "Debito", "Credito", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tabla_gastos_generales);

        javax.swing.GroupLayout jPanel32Layout = new javax.swing.GroupLayout(jPanel32);
        jPanel32.setLayout(jPanel32Layout);
        jPanel32Layout.setHorizontalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel32Layout.createSequentialGroup()
                .addGap(416, 416, 416)
                .addComponent(btnResumenGastosGenerales, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(471, Short.MAX_VALUE))
            .addGroup(jPanel32Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4)
                .addContainerGap())
        );
        jPanel32Layout.setVerticalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel32Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnResumenGastosGenerales, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 432, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel30Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel32, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Resumen de Gastos Generales", jPanel7);

        jPanel33.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel35.setBackground(new java.awt.Color(255, 255, 255));
        jPanel35.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnEstadoFinanciero.setFont(new java.awt.Font("Sylfaen", 1, 18)); // NOI18N
        btnEstadoFinanciero.setText("Generar");
        btnEstadoFinanciero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEstadoFinancieroActionPerformed(evt);
            }
        });

        tabla_estado_financiero.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Concepto", "Monto"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane7.setViewportView(tabla_estado_financiero);

        mensajeLabel.setFont(new java.awt.Font("Sylfaen", 1, 18)); // NOI18N

        javax.swing.GroupLayout jPanel35Layout = new javax.swing.GroupLayout(jPanel35);
        jPanel35.setLayout(jPanel35Layout);
        jPanel35Layout.setHorizontalGroup(
            jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel35Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7)
                .addContainerGap())
            .addGroup(jPanel35Layout.createSequentialGroup()
                .addGap(422, 422, 422)
                .addComponent(btnEstadoFinanciero, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(178, 178, 178)
                .addComponent(mensajeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel35Layout.setVerticalGroup(
            jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel35Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnEstadoFinanciero, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                    .addComponent(mensajeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel33Layout = new javax.swing.GroupLayout(jPanel33);
        jPanel33.setLayout(jPanel33Layout);
        jPanel33Layout.setHorizontalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel33Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel35, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel33Layout.setVerticalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel33Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel35, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel33, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel33, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Estado de Ganancias y Perdidas", jPanel8);

        jPanel27.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel29.setBackground(new java.awt.Color(255, 255, 255));
        jPanel29.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        tabla_balanza_comprobacion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cuenta", "Descripcion", "Debito", "Credito"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tabla_balanza_comprobacion);

        btnBalanzaComprobacion.setFont(new java.awt.Font("Sylfaen", 1, 18)); // NOI18N
        btnBalanzaComprobacion.setText("Generar");
        btnBalanzaComprobacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBalanzaComprobacionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel29Layout = new javax.swing.GroupLayout(jPanel29);
        jPanel29.setLayout(jPanel29Layout);
        jPanel29Layout.setHorizontalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel29Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
            .addGroup(jPanel29Layout.createSequentialGroup()
                .addGap(417, 417, 417)
                .addComponent(btnBalanzaComprobacion, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(470, Short.MAX_VALUE))
        );
        jPanel29Layout.setVerticalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel29Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBalanzaComprobacion, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 397, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel27Layout = new javax.swing.GroupLayout(jPanel27);
        jPanel27.setLayout(jPanel27Layout);
        jPanel27Layout.setHorizontalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel27Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel27Layout.setVerticalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel27Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Balanza de Comprobación", jPanel6);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1099, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtNivelCuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNivelCuentaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNivelCuentaActionPerformed

    private void btnLimpiarCatalogoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarCatalogoActionPerformed
        // TODO add your handling code here:
        JTextField[] campos = {txtNroCuenta, txtDescripcionCuenta, txtCuentaPadre, txtNivelCuenta};
        cmbGrupoCuenta.setSelectedItem("---Seleccione una opción---");
        btnTipoCuentaGroup.clearSelection();
        limpiarCampos(campos);
        tb_load_catalogo();
    }//GEN-LAST:event_btnLimpiarCatalogoActionPerformed

    private void btnBuscarCatalogoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarCatalogoActionPerformed
        // TODO add your handling code here:
        //if every field is empty, then do not apply search
        if (txtNroCuenta.getText().isEmpty() && txtDescripcionCuenta.getText().isEmpty() && txtNivelCuenta.getText().isEmpty() && cmbGrupoCuenta.getSelectedItem().equals("---Seleccione una opción---") && txtCuentaPadre.getText().isEmpty() && !(rdbGeneral.isSelected() || rdbDetalle.isSelected())) {
            JOptionPane.showMessageDialog(null, "Todos los campos están vacíos", "Información", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        // Crear un objeto CatalogoCuenta con los campos a filtrar
        CatalogoCuenta filtro = new CatalogoCuenta();
        if (!txtNroCuenta.getText().isEmpty()) {
            filtro.setNro_cta(Integer.parseInt(txtNroCuenta.getText()));
        }
        if (!txtDescripcionCuenta.getText().isEmpty()) {
            filtro.setDescripcion_cta(txtDescripcionCuenta.getText());
        }
        if (rdbGeneral.isSelected() || rdbDetalle.isSelected()) {
            boolean tipo_cta = false;
            if (rdbGeneral.isSelected()) {
                tipo_cta = true;
            }
            filtro.setTipo_cta(tipo_cta);
        }

        if (!txtNivelCuenta.getText().isEmpty()) {
            filtro.setNivel_cta(Integer.parseInt(txtNivelCuenta.getText()));
        }

        if (!txtCuentaPadre.getText().isEmpty()) {
            filtro.setCta_padre(Integer.parseInt(txtCuentaPadre.getText()));
        }

        if (!cmbGrupoCuenta.getSelectedItem().equals("---Seleccione una opción---")) {
            int grupo_cta = cmbGrupoCuenta.getSelectedItem().equals("Débito") ? 1 : 2;
            filtro.setGrupo_cta(grupo_cta);
        }

        List<CatalogoCuenta> catalogoCuentasFiltrado = catalogoCtrl.obtenerCatalogoCuentas(filtro);

        DefaultTableModel dt = (DefaultTableModel) catalogo_table.getModel();
        dt.setRowCount(0);

        for (CatalogoCuenta catalogo : catalogoCuentasFiltrado) {
            String tipoCta = catalogo.isTipo_cta() ? "General" : "Detalle";
            String grupoCta = (catalogo.getGrupo_cta() == 1) ? "Débito" : "Crédito";

            Object[] rowData = {
                catalogo.getNro_cta(),
                catalogo.getDescripcion_cta(),
                tipoCta,
                catalogo.getNivel_cta(),
                catalogo.getCta_padre(),
                grupoCta,
                catalogo.getFecha_creacion_cta(),
                catalogo.getHora_creacion_cta(),
                catalogo.getDebito_acum_cta(),
                catalogo.getCredito_acum_cta(),
                catalogo.getBalance_cta()
            };

            dt.addRow(rowData);
        }
    }//GEN-LAST:event_btnBuscarCatalogoActionPerformed

    private void cmbGrupoCuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbGrupoCuentaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbGrupoCuentaActionPerformed

    private void txtCuentaPadreKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCuentaPadreKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (Character.isLetter(c) || Character.isWhitespace(c)) {
            txtCuentaPadre.setEditable(false);
        } else {
            txtCuentaPadre.setEditable(true);
        }
    }//GEN-LAST:event_txtCuentaPadreKeyPressed

    private void txtNroCuentaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNroCuentaKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (Character.isLetter(c) || Character.isWhitespace(c)) {
            txtNroCuenta.setEditable(false);
        } else {
            txtNroCuenta.setEditable(true);
        }
    }//GEN-LAST:event_txtNroCuentaKeyPressed

    private void btnLimpiarTransFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarTransFechaActionPerformed
        // TODO add your handling code here:
        fecha_consulta.setDate(null);
        DefaultTableModel dt = (DefaultTableModel) table_fecha_consulta.getModel();
        dt.setRowCount(0);
    }//GEN-LAST:event_btnLimpiarTransFechaActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        fecha_inicial_trans.setDate(null);
        fecha_final_trans.setDate(null);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void txtNroCuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNroCuentaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNroCuentaActionPerformed

    private void txtNroCuentaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNroCuentaFocusLost

    }//GEN-LAST:event_txtNroCuentaFocusLost

    private void txtNroCuentaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNroCuentaFocusGained

    }//GEN-LAST:event_txtNroCuentaFocusGained

    private void txtCuentaPadreFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCuentaPadreFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCuentaPadreFocusLost

    private void btn_consulta_fechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_consulta_fechaActionPerformed
        // TODO add your handling code here:
        //if every field are empty, then do not apply search        

        Date fechaSeleccionada = fecha_consulta.getDate();
        if (fechaSeleccionada == null) {
            JOptionPane.showMessageDialog(null, "El campo de fecha está vacío", "Información", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        LocalDate fechaini = fechaSeleccionada.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        List<CabeceraTransaccion> cabeceras = procesocierreCtrl.obtenerCabecerasPorRangoDeFechas(fechaini, fechaini);

        DefaultTableModel dt = (DefaultTableModel) table_fecha_consulta.getModel();
        dt.setRowCount(0);
        if (cabeceras.isEmpty()) {
            JOptionPane.showMessageDialog(null, "No se encontró ninguna transaccion en la fecha especificada", "Información", JOptionPane.INFORMATION_MESSAGE);
        } else {
            for (CabeceraTransaccion cabecera : cabeceras) {
                String nro_doc = cabecera.getNroDocu();

                List<TransaccionContable> transacciones = transaccionCtrl.obtenerTransaccionesPorNumeroDocumento(nro_doc);
                if (!transacciones.isEmpty()) {
                    for (TransaccionContable transaccion : transacciones) {
                        Documentos tipodocu = documentoCtrl.buscarDocumento(String.valueOf(cabecera.getTipoDocu()));
                        Object[] rowData = {
                            cabecera.getNroDocu(),
                            cabecera.getFechaDocu(),
                            cabecera.getHoraDocu(),
                            tipodocu.getDescripcion(),
                            cabecera.getDescripcionDocu(),
                            cabecera.getHechoPor(),
                            cabecera.getMontoTransaccion(),
                            cabecera.getFechaActualizacion(),
                            transaccion.getSecuencia_doc(),
                            transaccion.getCuenta_contable(),
                            transaccion.getValor_debito(),
                            transaccion.getValor_credito(),
                            transaccion.getComentario()
                        };
                        dt.addRow(rowData);
                    }
                }

            }

        }

    }//GEN-LAST:event_btn_consulta_fechaActionPerformed

    private void txt_documentoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_documentoFocusLost
        // TODO add your handling code here:

    }//GEN-LAST:event_txt_documentoFocusLost

    private void txt_documentoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_documentoFocusGained
        // TODO add your handling code here:

    }//GEN-LAST:event_txt_documentoFocusGained

    private void txtDescripcionCuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDescripcionCuentaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDescripcionCuentaActionPerformed

    private void txtCuentaPadreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCuentaPadreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCuentaPadreActionPerformed

    private void fecha_inicial_transKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fecha_inicial_transKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_fecha_inicial_transKeyReleased

    private void clean_processActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clean_processActionPerformed
        cmb_descrip_doc.setSelectedIndex(-1);
        DefaultTableModel dt = (DefaultTableModel) tabla_trans_docs.getModel();
        dt.setRowCount(0);
    }//GEN-LAST:event_clean_processActionPerformed

    private void consultar_tipo_docActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultar_tipo_docActionPerformed
        // TODO add your handling code here:

        if (txt_documento.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "El campo de documento está vacío", "Información", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        CabeceraTransaccion cabecera = new CabeceraTransaccion();
        try {
            cabecera = cabeceraCtrl.obtenerCabeceraPorNumero(txt_documento.getText());
        } catch (ParseException ex) {
            Logger.getLogger(consultas.class.getName()).log(Level.SEVERE, null, ex);
        }

        DefaultTableModel dt = (DefaultTableModel) tabla_transaccion_documento.getModel();
        dt.setRowCount(0);
        if (cabecera == null) {
            JOptionPane.showMessageDialog(null, "No se encontró ninguna transaccion", "Información", JOptionPane.INFORMATION_MESSAGE);
        } else {

            String nro_doc = cabecera.getNroDocu();

            List<TransaccionContable> transacciones = transaccionCtrl.obtenerTransaccionesPorNumeroDocumento(nro_doc);
            if (!transacciones.isEmpty()) {
                for (TransaccionContable transaccion : transacciones) {
                    Documentos tipodocu = documentoCtrl.buscarDocumento(String.valueOf(cabecera.getTipoDocu()));
                    Object[] rowData = {
                        cabecera.getNroDocu(),
                        cabecera.getFechaDocu(),
                        cabecera.getHoraDocu(),
                        tipodocu.getDescripcion(),
                        cabecera.getDescripcionDocu(),
                        cabecera.getHechoPor(),
                        cabecera.getFechaActualizacion(),
                        transaccion.getSecuencia_doc(),
                        transaccion.getCuenta_contable(),
                        transaccion.getValor_debito(),
                        transaccion.getValor_credito(),
                        transaccion.getComentario()
                    };
                    dt.addRow(rowData);
                }
            } else {
                JOptionPane.showMessageDialog(null, "No se encontró ninguna transaccion", "Información", JOptionPane.INFORMATION_MESSAGE);
            }

        }

    }//GEN-LAST:event_consultar_tipo_docActionPerformed

    private void btn_consultar_rango_fechasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_consultar_rango_fechasActionPerformed
        Date fechaSeleccionada1 = fecha_inicial_trans.getDate();
        Date fechaSeleccionada2 = fecha_final_trans.getDate();

        if (fechaSeleccionada1 == null || fechaSeleccionada2 == null) {
            JOptionPane.showMessageDialog(null, "Uno o ambos campos de fecha están vacíos", "Información", JOptionPane.INFORMATION_MESSAGE);
            return;
        } else {
            if (fechaSeleccionada2.compareTo(fechaSeleccionada1) <= 0) {
                JOptionPane.showMessageDialog(this, "La fecha final debe ser mayor o igual que la fecha inicial.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }

        LocalDate fechaini = fechaSeleccionada1.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        LocalDate fechafin = fechaSeleccionada2.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();

        List<CabeceraTransaccion> cabeceras = procesocierreCtrl.obtenerCabecerasPorRangoDeFechas(fechaini, fechafin);

        DefaultTableModel dt = (DefaultTableModel) table_rango_fechas.getModel();
        dt.setRowCount(0);
        if (cabeceras.isEmpty()) {
            JOptionPane.showMessageDialog(null, "No se encontró ninguna transaccion en la fecha especificada", "Información", JOptionPane.INFORMATION_MESSAGE);
        } else {
            for (CabeceraTransaccion cabecera : cabeceras) {
                String nro_doc = cabecera.getNroDocu();

                List<TransaccionContable> transacciones = transaccionCtrl.obtenerTransaccionesPorNumeroDocumento(nro_doc);
                if (!transacciones.isEmpty()) {
                    for (TransaccionContable transaccion : transacciones) {
                        Documentos tipodocu = documentoCtrl.buscarDocumento(String.valueOf(cabecera.getTipoDocu()));
                        Object[] rowData = {
                            cabecera.getNroDocu(),
                            cabecera.getFechaDocu(),
                            cabecera.getHoraDocu(),
                            tipodocu.getDescripcion(),
                            cabecera.getDescripcionDocu(),
                            cabecera.getHechoPor(),
                            cabecera.getMontoTransaccion(),
                            cabecera.getFechaActualizacion(),
                            transaccion.getSecuencia_doc(),
                            transaccion.getCuenta_contable(),
                            transaccion.getValor_debito(),
                            transaccion.getValor_credito(),
                            transaccion.getComentario()
                        };
                        dt.addRow(rowData);
                    }
                }

            }

        }
    }//GEN-LAST:event_btn_consultar_rango_fechasActionPerformed

    private void btn_consulta_docActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_consulta_docActionPerformed
        String descrip_Documento = (String) cmb_descrip_doc.getSelectedItem();

        if (descrip_Documento.equals("-Seleccione una opción-")) {
            JOptionPane.showMessageDialog(null, "Seleccione un tipo de documento", "Información", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        int idDocumento = documentoCtrl.buscarIdDocumento(descrip_Documento);

        List<CabeceraTransaccion> cabeceras = cabeceraCtrl.obtenerCabecerasPorTipoDocumento(idDocumento);
        if (cabeceras.isEmpty()) {
            JOptionPane.showMessageDialog(null, "No existe ninguna transaccion con ese tipo de documento", "Información", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        DefaultTableModel dt = (DefaultTableModel) tabla_trans_docs.getModel();
        dt.setRowCount(0);

        // Realizar la búsqueda de cabeceras por número de documento
        for (CabeceraTransaccion cabecera : cabeceras) {
            String nro_doc = cabecera.getNroDocu();

            List<TransaccionContable> transacciones = transaccionCtrl.obtenerTransaccionesPorNumeroDocumento(nro_doc);
            if (!transacciones.isEmpty()) {
                for (TransaccionContable transaccion : transacciones) {
                    Documentos tipodocu = documentoCtrl.buscarDocumento(String.valueOf(cabecera.getTipoDocu()));
                    Object[] rowData = {
                        cabecera.getNroDocu(),
                        cabecera.getFechaDocu(),
                        cabecera.getHoraDocu(),
                        tipodocu.getDescripcion(),
                        cabecera.getDescripcionDocu(),
                        cabecera.getHechoPor(),
                        cabecera.getMontoTransaccion(),
                        cabecera.getFechaActualizacion(),
                        transaccion.getSecuencia_doc(),
                        transaccion.getCuenta_contable(),
                        transaccion.getValor_debito(),
                        transaccion.getValor_credito(),
                        transaccion.getComentario()
                    };
                    dt.addRow(rowData);
                }
            }

        }


    }//GEN-LAST:event_btn_consulta_docActionPerformed

    private void btnBalanzaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBalanzaActionPerformed
        // TODO add your handling code here:

        BalanzaController balanzaCtrl = new BalanzaController();
        Map<Integer, Double> balanzaGeneral = balanzaCtrl.calcularBalanzaGeneral(balanzaCtrl.obtenerCuentasCatalogo(), balanzaCtrl.obtenerTransacciones());
        if (balanzaGeneral.isEmpty()) {
            JOptionPane.showMessageDialog(null, "No es posible realizar la balanza general", "Información", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tabla_balanza_general.getModel();
        model.setRowCount(0); // Limpiar la tabla antes de agregar los datos

        // Obtener los datos de la balanza general (supongamos que están en un mapa balanzaGeneral)
        for (Map.Entry<Integer, Double> entry : balanzaGeneral.entrySet()) {
            Integer cuenta = entry.getKey();
            CatalogoCuenta cuentaInfo = catalogoCtrl.buscarCuenta(String.valueOf(cuenta));
            Double saldo = entry.getValue();
            String tipoCuenta = balanzaCtrl.determinarTipoCuenta(cuenta);

            model.addRow(new Object[]{cuenta, cuentaInfo.getDescripcion_cta(), tipoCuenta, saldo});
        }
    }//GEN-LAST:event_btnBalanzaActionPerformed

    private void Limpiar_tipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Limpiar_tipoActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dt = (DefaultTableModel) tabla_transaccion_documento.getModel();
        dt.setRowCount(0);
        txt_documento.setText("");
    }//GEN-LAST:event_Limpiar_tipoActionPerformed

    private void btnBalanzaComprobacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBalanzaComprobacionActionPerformed
        // TODO add your handling code here:
        BalanzaController balanzaCtrl = new BalanzaController();
        Map<Integer, Pair<Double, Double>> saldosCuentas = balanzaCtrl.calcularBalanzaDeComprobacion(balanzaCtrl.obtenerCuentasCatalogo(), balanzaCtrl.obtenerTransacciones());
        if (saldosCuentas.isEmpty()) {
            JOptionPane.showMessageDialog(null, "No es posible realizar la balanza de comprobacion", "Información", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tabla_balanza_comprobacion.getModel();
        model.setRowCount(0); // Limpiar la tabla antes de agregar los datos

        // Obtener los datos de la balanza comprobacion
        for (Map.Entry<Integer, Pair<Double, Double>> entry : saldosCuentas.entrySet()) {
            Integer cuenta = entry.getKey();
            CatalogoCuenta cuentaInfo = catalogoCtrl.buscarCuenta(String.valueOf(cuenta));
            String descripcionCuenta = cuentaInfo.getDescripcion_cta();
            Pair<Double, Double> saldos = entry.getValue();
            double saldoDebito = saldos.getKey();
            double saldoCredito = saldos.getValue();

            model.addRow(new Object[]{cuenta, descripcionCuenta, saldoDebito, saldoCredito});
        }

    }//GEN-LAST:event_btnBalanzaComprobacionActionPerformed

    private void btnResumenGastosGeneralesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResumenGastosGeneralesActionPerformed
        // TODO add your handling code here:
        BalanzaController balanzaCtrl = new BalanzaController();
        Map<Integer, Pair<Double, Double>> saldosCuentas = balanzaCtrl.calcularBalanzaDeComprobacion(balanzaCtrl.obtenerCuentasCatalogo(), balanzaCtrl.obtenerTransacciones());
        if (saldosCuentas.isEmpty()) {
            JOptionPane.showMessageDialog(null, "No es posible realizar el resumen de gastos generales", "Información", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tabla_gastos_generales.getModel();
        model.setRowCount(0); // Limpiar la tabla antes de agregar los datos

        boolean flag = false;

        // Obtener los datos de la balanza comprobacion
        for (Map.Entry<Integer, Pair<Double, Double>> entry : saldosCuentas.entrySet()) {
            Integer cuenta = entry.getKey();
            CatalogoCuenta cuentaInfo = catalogoCtrl.buscarCuenta(String.valueOf(cuenta));
            String tipoCuenta = balanzaCtrl.determinarTipoCuenta(cuentaInfo.getNro_cta());

            if (!tipoCuenta.equals("Activo") && !tipoCuenta.equals("Pasivo") && !tipoCuenta.equals("Capital")) {
                flag = true;
                String descripcionCuenta = cuentaInfo.getDescripcion_cta();
                Pair<Double, Double> saldos = entry.getValue();
                double saldoDebito = saldos.getKey();
                double saldoCredito = saldos.getValue();
                double saldoTotal = saldoDebito - saldoCredito;

                model.addRow(new Object[]{cuenta, descripcionCuenta, saldoDebito, saldoCredito, saldoTotal});
            }
        }

        if (!flag) {
            JOptionPane.showMessageDialog(null, "No es posible realizar el resumen de gastos generales", "Información", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnResumenGastosGeneralesActionPerformed

    private void btnEstadoFinancieroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEstadoFinancieroActionPerformed
        // TODO add your handling code here:
        BalanzaController balanzaCtrl = new BalanzaController();
        Map<String, Double> estado = balanzaCtrl.calcularEstadoGananciasPerdidas(balanzaCtrl.obtenerTransacciones());

        if (estado.isEmpty()) {
            JOptionPane.showMessageDialog(null, "No es posible realizar el estado financiero", "Información", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        double resultadoNeto = estado.get("Ingresos") - estado.get("Costos") - estado.get("Gastos");

        if (resultadoNeto > 0) {
            mensajeLabel.setText("Estado: Ganancia");
            mensajeLabel.setForeground(Color.GREEN);
        } else if (resultadoNeto < 0) {
            mensajeLabel.setText("Estado: Pérdida");
            mensajeLabel.setForeground(Color.RED);
        } else {
            mensajeLabel.setText("Estado: Equilibrio");
            mensajeLabel.setForeground(Color.BLACK);
        }

        DefaultTableModel model = (DefaultTableModel) tabla_estado_financiero.getModel();
        model.setRowCount(0); // Limpiar la tabla antes de agregar los datos

        for (Map.Entry<String, Double> entry : estado.entrySet()) {
            String concepto = entry.getKey();
            Double monto = entry.getValue();

            // Agregar fila a la tabla
            model.addRow(new Object[]{concepto, monto});
        }


    }//GEN-LAST:event_btnEstadoFinancieroActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane Jscrollpane_trans;
    private javax.swing.JButton Limpiar_tipo;
    private javax.swing.JButton btnBalanza;
    private javax.swing.JButton btnBalanzaComprobacion;
    private javax.swing.JButton btnBuscarCatalogo;
    private javax.swing.JButton btnEstadoFinanciero;
    private javax.swing.JButton btnLimpiarCatalogo;
    private javax.swing.JButton btnLimpiarTransFecha;
    private javax.swing.JButton btnResumenGastosGenerales;
    private javax.swing.ButtonGroup btnTipoCuentaGroup;
    private javax.swing.JButton btn_consulta_doc;
    private javax.swing.JButton btn_consulta_fecha;
    private javax.swing.JButton btn_consultar_rango_fechas;
    private javax.swing.JTable catalogo_table;
    private javax.swing.JButton clean_process;
    private javax.swing.JComboBox<String> cmbGrupoCuenta;
    private javax.swing.JComboBox<String> cmb_descrip_doc;
    private javax.swing.JButton consultar_tipo_doc;
    private com.toedter.calendar.JDateChooser fecha_consulta;
    private com.toedter.calendar.JDateChooser fecha_final_trans;
    private com.toedter.calendar.JDateChooser fecha_inicial_trans;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel33;
    private javax.swing.JPanel jPanel35;
    private javax.swing.JPanel jPanel36;
    private javax.swing.JPanel jPanel37;
    private javax.swing.JPanel jPanel38;
    private javax.swing.JPanel jPanel39;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel40;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel mensajeLabel;
    private javax.swing.JRadioButton rdbDetalle;
    private javax.swing.JRadioButton rdbGeneral;
    private javax.swing.JTable tabla_balanza_comprobacion;
    private javax.swing.JTable tabla_balanza_general;
    private javax.swing.JTable tabla_estado_financiero;
    private javax.swing.JTable tabla_gastos_generales;
    private javax.swing.JTable tabla_trans_docs;
    private javax.swing.JTable tabla_transaccion_documento;
    private javax.swing.JTable table_fecha_consulta;
    private javax.swing.JTable table_rango_fechas;
    private javax.swing.JTextField txtCuentaPadre;
    private javax.swing.JTextField txtDescripcionCuenta;
    private javax.swing.JTextField txtNivelCuenta;
    private javax.swing.JTextField txtNroCuenta;
    private javax.swing.JTextField txt_documento;
    // End of variables declaration//GEN-END:variables

    private static class ProcesoDiarioController {

        public ProcesoDiarioController() {
        }

        private List<CabeceraTransaccion> obtenerCabecerasPorRangoDeFechas(LocalDate fechaInicio, LocalDate fechaFin) {
            return null;
        }
    }
}
